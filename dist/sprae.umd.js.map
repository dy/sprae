{
  "version": 3,
  "sources": ["../package.json", "../core.js", "../store.js", "../signal.js", "../directive/if.js", "../directive/else.js", "../directive/text.js", "../directive/class.js", "../directive/style.js", "../directive/fx.js", "../directive/value.js", "../directive/ref.js", "../directive/scope.js", "../directive/each.js", "../directive/default.js", "../directive/spread.js", "../sprae.js", "<stdin>"],
  "sourcesContent": ["{\n  \"name\": \"sprae\",\n  \"description\": \"DOM microhydration\",\n  \"version\": \"12.2.3\",\n  \"main\": \"./sprae.js\",\n  \"module\": \"./sprae.js\",\n  \"umd:main\": \"dist/sprae.umd.js\",\n  \"unpkg\": \"dist/sprae.umd.js\",\n  \"types\": \"dist/sprae.d.ts\",\n  \"type\": \"module\",\n  \"files\": [\n    \"core.js\",\n    \"sprae.js\",\n    \"store.js\",\n    \"signal.js\",\n    \"micro.js\",\n    \"directive\",\n    \"dist\"\n  ],\n  \"devDependencies\": {\n    \"@preact/signals\": \"^2.0.4\",\n    \"@preact/signals-core\": \"^1.8.0\",\n    \"@webreflection/signal\": \"^2.1.2\",\n    \"es-module-shims\": \"^1.10.0\",\n    \"esbuild\": \"^0.23.0\",\n    \"esbuild-plugin-umd-wrapper\": \"^2.0.3\",\n    \"hyperf\": \"^1.7.0\",\n    \"jsdom\": \"^27.0.0\",\n    \"requestidlecallback\": \"^0.3.0\",\n    \"signal-polyfill\": \"^0.1.1\",\n    \"subscript\": \"^9.1.0\",\n    \"tst\": \"^7.2.0\",\n    \"ulive\": \"^1.0.7\",\n    \"usignal\": \"^0.9.0\",\n    \"wait-please\": \"^3.1.0\"\n  },\n  \"scripts\": {\n    \"test\": \"node -r ./test/register.cjs test/test.js\",\n    \"build\": \"node .esbuild.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/dy/sprae.git\"\n  },\n  \"keywords\": [\n    \"hydration\",\n    \"progressive\",\n    \"progressive enhancement\",\n    \"signals\",\n    \"directives\",\n    \"preact-signals\",\n    \"reactive\",\n    \"template-parts\",\n    \"petit-vue\",\n    \"alpinejs\",\n    \"templating\"\n  ],\n  \"author\": \"Dmitry Iv <df.creative@gmail.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/dy/sprae/issues\"\n  },\n  \"homepage\": \"https://github.com/dy/sprae#readme\"\n}\n", "import store, { _change, _signals } from \"./store.js\";\nimport pkg from './package.json' with { type: 'json' };\n\nexport const _dispose = (Symbol.dispose ||= Symbol(\"dispose\")),\n  _state = Symbol(\"state\"),\n  _on = Symbol('on'),\n  _off = Symbol('off'),\n  _add = Symbol('init');\n\n\nexport let prefix = ':', signal, effect, computed, batch = (fn) => fn(), untracked = batch;\n\nexport let directive = {}, modifier = {}\n\nlet currentDir = null;\n\n/**\n * Applies directives to an HTML element and manages its reactive state.\n *\n * @param {Element} [el=document.body] - The target HTML element to apply directives to.\n * @param {Object|store} [state] - Initial state values to populate the element's reactive state.\n * @returns {Object} The reactive state object associated with the element.\n */\nconst sprae = (el = document.body, state) => {\n  // repeated call can be caused by eg. :each with new objects with old keys\n  if (el[_state]) return Object.assign(el[_state], state)\n\n  // console.group('sprae', el)\n\n  // take over existing state instead of creating a clone\n  state = store(state || {})\n\n  let fx = [], offs = []\n\n  // on/off all effects\n  // we don't call prevOn as convention: everything defined before :else :if won't be disabled by :if\n  // imagine <x :onx=\"...\" :if=\"...\"/> - when :if is false, it disables directives after :if (calls _off) but ignores :onx\n  el[_on] = () => (!offs && (offs = fx.map(fn => fn())))\n  el[_off] = () => (offs?.map(off => off()), offs = null)\n\n  // destroy\n  el[_dispose] ||= () => (el[_off](), el[_off] = el[_on] = el[_dispose] = el[_add] = el[_state] = null)\n\n  const add = el[_add] = (el) => {\n    let _attrs = el.attributes, fn;\n\n    // we iterate live collection (subsprae can init args)\n    if (_attrs) for (let i = 0; i < _attrs.length;) {\n      let { name, value } = _attrs[i]\n\n      if (name.startsWith(prefix)) {\n        el.removeAttribute(name)\n\n        // directive initializer can be redefined\n        if (fn = initDirective(el, name, value, state)) fx.push(fn), offs.push(fn())\n\n        // stop after subsprae like :each, :if, :scope etc.\n        if (_state in el) return\n      } else i++\n    }\n\n    // :if and :each replace element with text node, which tweaks .children length, but .childNodes length persists\n    // for (let i = 0, child; i < (el.childNodes.length); i++) child =  el.childNodes[i], child.nodeType == 1 && add(child)\n    for (let child of [...el.childNodes]) child.nodeType == 1 && add(child)\n  };\n\n  add(el);\n\n  // if element was spraed by inline :with/:if/:each/etc instruction (meaning it has state placeholder) - skip, otherwise save _state\n  if (el[_state] === undefined) el[_state] = state\n\n  // console.groupEnd()\n\n  return state;\n}\n\nsprae.version = pkg.version;\n\n\n/**\n * Initializes directive (defined by sprae build), returns \"on\" function that enables it\n * Multiprop sequences initializer, eg. :a:b..c:d\n * @type {(el: HTMLElement, name:string, value:string, state:Object) => Function}\n * */\nconst initDirective = (el, dirName, expr, state) => {\n  let cur, // current step callback\n    off // current step disposal\n\n  let steps = dirName.slice(prefix.length).split('..').map((step, i, { length }) => (\n    // multiple attributes like :id:for=\"\"\n    step.split(prefix).reduce((prev, str) => {\n      let [name, ...mods] = str.split('.');\n      let evaluate = parse(expr, directive[currentDir = name]?.parse)\n\n      // a hack, but events have no signal-effects and can be sequenced\n      // FIXME: events are molded into core, but should be an optional directive\n      if (name.startsWith('on')) {\n        let type = name.slice(2),\n          fn = applyMods(\n            sx(\n              // single event vs chain\n              length == 1 ?  e => evaluate(state, (fn) => call(fn, e)) :\n                (e => (cur = (!i ?  e => call(evaluate(state), e) : cur)(e), off(), off = steps[(i + 1) % length]())),\n              { target: el }\n            ),\n            mods);\n\n        return (_poff) => (_poff = prev?.(), fn.target.addEventListener(type, fn, fn), () => (_poff?.(), fn.target.removeEventListener(type, fn)))\n      }\n\n      let fn, dispose, change, count;\n\n      if (mods.length) {\n        change = signal(-1), // signal authorized to trigger effect: 0 = init; >0 = trigger\n        count = -1 // called effect count\n\n        // effect applier - first time it applies the effect, next times effect is triggered by change signal\n        fn = applyMods(sx(throttle(() => {\n            if (++change.value) return // all calls except for the first one are handled by effect\n            dispose = effect(() => update && (\n              change.value == count ? fn() : // plan update: separate tick (via throttle) makes sure planner effect call is finished before eval call\n                (count = change.value, evaluate(state, update)) // if changed more than effect called - call it\n            ));\n          }), {target: el}), mods)\n      }\n      else {\n        fn = sx(() => dispose = effect(() =>  evaluate(state, update)), {target: el })\n      }\n\n      // props have no sequences and can be sync\n      // it's nice to see directive as taking some part of current context and returning new or updated context\n      let update = (directive[name] || directive['*'])(fn.target, state, expr, name)\n\n      // some directives are effect-less\n      if (!update) return\n\n      // take over state if directive created it (mainly :scope)\n      if (el[_state]) state = el[_state]\n\n      return (_poff) => (\n        _poff = prev?.(),\n        // console.log('ON', name),\n        fn(),\n        () => (\n          // console.log('OFF', name, el),\n          _poff?.(), dispose?.(), change && (change.value = -1, count = dispose = null)\n        )\n      )\n    }, null)\n  ));\n\n  // off can be changed on the go\n  return () => (off = steps[0]?.())\n}\n\n\n/**\n * Configure sprae\n */\nexport const use = (s) => (\n  s.compile && (compile = s.compile),\n  s.prefix && (prefix = s.prefix),\n  s.signal && (signal = s.signal),\n  s.effect && (effect = s.effect),\n  s.computed && (computed = s.computed),\n  s.batch && (batch = s.batch),\n  s.untracked && (untracked = s.untracked)\n)\n\n\n/**\n * Lifecycle hanger: spraes automatically any new nodes\n */\nexport const start = (root = document.body, values) => {\n  const state = store(values)\n  sprae(root, state);\n  const mo = new MutationObserver(mutations => {\n    for (const m of mutations) {\n      for (const el of m.addedNodes) {\n        // el can be spraed or removed by subsprae (like within :each/:if)\n        if (el.nodeType === 1 && el[_state] === undefined && root.contains(el)) {\n          // even if element has no spraeable attrs, some of its children can have\n          root[_add](el)\n        }\n      }\n      // for (const el of m.removedNodes) el[Symbol.dispose]?.()\n    }\n  });\n  mo.observe(root, { childList: true, subtree: true });\n  return state\n}\n\n\n/**\n * Compiles an expression into an evaluator function.\n * @type {(dir:string, expr: string, clean?: string => string) => Function}\n */\nexport let compile\n\n/**\n * Parses an expression into an evaluator function, caching the result for reuse.\n *\n * @param {string} expr The expression to parse and compile into a function.\n * @returns {Function} The compiled evaluator function for the expression.\n */\nexport const parse = (expr, prepare, _fn) => {\n  if (_fn = parse.cache[expr]) return _fn\n\n  let _expr = expr.trim() || 'undefined'\n  if (prepare) _expr = prepare(_expr)\n\n  // if, const, let - no return\n  if (/^(if|let|const)\\b/.test(_expr) || /;(?![^{]*})/.test(_expr)) ;\n  else _expr = `return ${_expr}`\n\n  // async expression\n  if (/\\bawait\\s/.test(_expr)) _expr = `return (async()=>{ ${_expr} })()`\n\n  // static time errors\n  try {\n    _fn = compile(_expr)\n    Object.defineProperty(_fn, \"name\", {value: `\u2234 ${expr}`})\n  } catch (e) { console.error(`\u2234 ${e}\\n\\n${prefix + currentDir}=\"${expr}\"`) }\n\n  // run time errors\n  return parse.cache[expr] = (state, cb, _out) => {\n    try {\n      let result = _fn?.(state)\n      // if cb is given (to handle asyncs) - call it with result and return function that returns last cb result - needed for effect cleanup\n      if (cb) return result?.then ? result.then(v => _out = cb(v)) : _out = cb(result), () => call(_out)\n      else return result\n    } catch (e) {\n      console.error(`\u2234 ${e}\\n\\n${prefix + currentDir}=\"${expr}\"`)\n    }\n  }\n}\nparse.cache = {};\n\n\n// apply modifiers to context (from the end due to nature of wrapping ctx.call)\nconst applyMods = (fn, mods) => {\n  while (mods.length) {\n    let [name, ...params] = mods.pop().split('-')\n    fn = sx(modifier[name]?.(fn, ...params) ?? fn, fn)\n  }\n  return fn\n}\n\n// soft-extend missing props and ignoring signals\nconst sx = (a, b) => { if (a != b) for (let k in b) (a[k] ??= b[k]); return a }\n\n// instantiated <template> fragment holder, like persisting fragment but with minimal API surface\nexport const frag = (tpl) => {\n  if (!tpl.nodeType) return tpl // existing tpl\n\n  let content = tpl.content.cloneNode(true), // document fragment holder of content\n    attributes = [...tpl.attributes],\n    ref = document.createTextNode(''),\n    // ensure at least one node\n    childNodes = (content.append(ref), [...content.childNodes])\n\n  return {\n    // get parentNode() { return childNodes[0].parentNode },\n    childNodes,\n    content,\n    remove: () => content.append(...childNodes),\n    replaceWith(el) {\n      if (el === ref) return\n      ref.before(el)\n      content.append(...childNodes)\n    },\n    attributes,\n    removeAttribute(name) { attributes.splice(attributes.findIndex(a => a.name === name), 1) },\n    // setAttributeNode() { }\n  }\n}\n\n// if value is function - return result of its call\nexport const call = (v, arg) => typeof v === 'function' ? v(arg) : v\n\n// camel to kebab\nexport const dashcase = (str) => str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match, i) => (i ? '-' : '') + match.toLowerCase());\n\n// set attr\nexport const attr = (el, name, v) => (v == null || v === false) ? el.removeAttribute(name) : el.setAttribute(name, v === true ? \"\" : v);\n\n// convert any-arg to className string\nexport const clsx = (c, _out = []) => !c ? '' : typeof c === 'string' ? c : (\n  Array.isArray(c) ? c.map(clsx) :\n    Object.entries(c).reduce((s, [k, v]) => !v ? s : [...s, k], [])\n).join(' ')\n\n// throttle function to (once per tick or other custom scheduler)\nexport const throttle = (fn, schedule = queueMicrotask) => {\n  let _planned = 0;\n  const throttled = (e) => {\n    if (!_planned++) fn(e), schedule((_dirty = _planned > 1) => (\n      _planned = 0, _dirty && throttled(e)\n    ));\n  }\n  return throttled;\n}\n\nexport const debounce = (fn, schedule = queueMicrotask, _count = 0) => (arg, _planned=++_count) => schedule(() => (_planned == _count && fn(arg)))\n\nexport * from './store.js';\n\nexport default sprae\n", "// signals-based proxy\nimport { signal, computed, batch, untracked } from './core.js'\n\n\n// _signals allows both storing signals and checking instance, which would be difficult with WeakMap\nexport const _signals = Symbol('signals'),\n  // _change is a signal that tracks changes to the object keys or array length\n  _change = Symbol('change'),\n  // _set is stashed setter for computed values\n  _set = Symbol('set')\n\n// a hack to simulate sandbox for `with` in evaluator\nlet sandbox = true\n\n// object store is not lazy\n// parent defines parent scope or sandbox\nexport const store = (values, parent) => {\n  if (!values) return values\n\n  // ignore globals\n  // FIXME: handle via has trap\n  if (values[Symbol.toStringTag]) return values;\n\n  // bypass existing store\n  if (values[_signals]) return values\n\n  // non-objects: for array redirect to list\n  if (values.constructor !== Object) return Array.isArray(values) ? list(values) : values\n\n  // _change stores total number of keys to track new props\n  let keyCount = Object.keys(values).length,\n    signals = {}\n\n  // proxy conducts prop access to signals\n  let state = new Proxy(Object.assign(signals, {\n    [_change]: signal(keyCount),\n    [_signals]: signals\n  }), {\n    get: (_, k) => {\n      // console.log('GET', k, signals)\n      if (k in signals) return (signals[k] ? signals[k].valueOf() : signals[k])\n      return parent ? parent[k] : globalThis[k]\n    },\n\n    set: (_, k, v, _s) => {\n      // console.group('SET', k, v, signals, k in signals)\n      if (k in signals) return set(signals, k, v), 1\n\n      // turn off sandbox to check if parents have the prop - we don't want to create new prop in global scope\n      sandbox = false\n\n      // write transparency for parent scope, unlike prototype chain\n      // if prop is defined in parent scope (except global) - write there\n      if (parent && k in parent) {\n        parent[k] = v\n      }\n      // else create in current scope\n      else {\n        create(signals, k, v)\n        signals[_change].value = ++keyCount\n      }\n\n      sandbox = true\n\n      // console.groupEnd()\n      // bump length for new signal\n      return 1\n    },\n\n    // FIXME: try to avild calling Symbol.dispose here. Maybe _delete method?\n    deleteProperty: (_, k) => {\n      k in signals && (k[0] != '_' && signals[k]?.[Symbol.dispose]?.(), delete signals[k], signals[_change].value = --keyCount)\n      return 1\n    },\n\n    // subscribe to length when spreading\n    ownKeys: () => (signals[_change].value, Reflect.ownKeys(signals)),\n\n    // sandbox prevents writing to global\n    has: (_, k) => {\n      if (k in signals) return true\n      if (parent) return k in parent\n      return sandbox\n    }\n  })\n\n  // init signals for values\n  const descs = Object.getOwnPropertyDescriptors(values)\n\n  for (let k in values) {\n    // getter turns into computed\n    if (descs[k]?.get)\n      // stash setter\n      (signals[k] = computed(descs[k].get.bind(state)))[_set] = descs[k].set?.bind(state);\n\n    // init blank signal - make sure we don't take prototype one\n    else create(signals, k, values[k])\n  }\n\n  return state\n}\n\n// array store - signals are lazy since arrays can be very large & expensive\nconst list = (values, parent = globalThis) => {\n\n  // gotta fill with null since proto methods like .reduce may fail\n  let signals = Array(values.length).fill(null),\n\n    // if .length was accessed from mutator (.push/etc) method\n    isMut = false,\n\n    // since array mutator methods read .length internally only once, we disable it on the moment of call, allowing rest of operations to be reactive\n    mut = fn => function () { isMut = true; return fn.apply(this, arguments); },\n\n    length = signal(values.length),\n\n    // proxy passes prop access to signals\n    state = new Proxy(\n      Object.assign(signals, {\n        [_change]: length,\n        [_signals]: signals,\n        // patch mutators\n        push: mut(signals.push),\n        pop: mut(signals.pop),\n        shift: mut(signals.shift),\n        unshift: mut(signals.unshift),\n        splice: mut(signals.splice),\n      }),\n      {\n        get(_, k) {\n          // console.log('GET', k, isMut)\n\n          // if .length is read within mutators - peek signal to avoid recursive subscription\n          // we need to ignore it only once and keep for the rest of the mutator call\n          if (k === 'length') return isMut ? (isMut = false, signals.length) : length.value;\n\n          // non-numeric\n          if (typeof k === 'symbol' || isNaN(k)) return signals[k]?.valueOf() ?? parent[k];\n\n          // create signal (lazy)\n          // NOTE: if you decide to unlazy values, think about large arrays - init upfront can be costly\n          return (signals[k] ??= signal(store(values[k]))).valueOf()\n        },\n\n        set(_, k, v) {\n          // console.log('SET', k, v)\n\n          // .length\n          if (k === 'length') {\n            // force cleaning up tail\n            for (let i = v; i < signals.length; i++) delete state[i]\n            // .length = N directly\n            length.value = signals.length = v;\n          }\n\n          // force changing length, if eg. a=[]; a[1]=1 - need to come after setting the item\n          else if (k >= signals.length) create(signals, k, v), state.length = +k + 1\n\n          // existing signal\n          else signals[k] ? set(signals, k, v) : create(signals, k, v)\n\n          return 1\n        },\n\n        // dispose notifies any signal deps, like :each\n        deleteProperty: (_, k) => (signals[k]?.[Symbol.dispose]?.(), delete signals[k], 1),\n      })\n\n  return state\n}\n\n// create signal value, skip untracked\nconst create = (signals, k, v) => (signals[k] = (k[0] == '_' || v?.peek) ? v : signal(store(v)))\n\n// set/update signal value\nconst set = (signals, k, v, _s, _v) => {\n  // skip unchanged (although can be handled by last condition - we skip a few checks this way)\n  return k[0] === '_' ? (signals[k] = v) :\n    (v !== (_v = (_s = signals[k]).peek())) && (\n      // stashed _set for value with getter/setter\n      _s[_set] ? _s[_set](v) :\n        // patch array\n        Array.isArray(v) && Array.isArray(_v) ?\n          // if we update plain array (stored in signal) - take over value instead\n          // since input value can be store, we have to make sure we don't subscribe to its length or values\n          // FIXME: generalize to objects\n          _change in _v ?\n            untracked(() => batch(() => {\n              for (let i = 0; i < v.length; i++) _v[i] = v[i]\n              _v.length = v.length // forces deleting tail signals\n            })) :\n            (_s.value = v) :\n          // .x = y\n          (_s.value = store(v))\n    )\n}\n\n\n// make sure state contains first element of path, eg. `a` from `a.b[c]`\n// NOTE: we don't need since we force proxy sandbox\n// export const ensure = (state, expr, _name = expr.match(/^\\w+(?=\\s*(?:\\.|\\[|$))/)) => _name && (state[_signals][_name[0]] ??= null)\n\nexport default store\n", "// preact-signals minimal implementation\nlet current, depth = 0, batched;\n\n// default signals impl\n\nexport const signal = (v, _s, _obs = new Set, _v = () => _s.value) => (\n  _s = {\n    get value() {\n      current?.deps.push(_obs.add(current));\n      return v\n    },\n    set value(val) {\n      if (val === v) return\n      v = val;\n      for (let sub of _obs) batched ? batched.add(sub) : sub(); // notify effects\n    },\n    peek() { return v },\n    toJSON: _v, then: _v, toString: _v, valueOf: _v\n  }\n)\n\nexport const effect = (fn, _teardown, _fx, _deps, __tmp) => (\n  _fx = (prev) => {\n    __tmp = _teardown;\n    _teardown = null; // we null _teardown to avoid repeated call in case of recursive update\n    __tmp?.call?.();\n    prev = current, current = _fx\n    if (depth++ > 10) throw 'Cycle detected';\n    try { _teardown = fn(); } finally { current = prev; depth-- }\n  },\n  _deps = _fx.deps = [],\n\n  _fx(),\n  (dep) => { _teardown?.call?.(); while (dep = _deps.pop()) dep.delete(_fx); }\n)\n\nexport const computed = (fn, _s = signal(), _c, _e, _v = () => _c.value) => (\n  _c = {\n    get value() {\n      _e ||= effect(() => _s.value = fn());\n      return _s.value\n    },\n    peek: _s.peek,\n    toJSON: _v, then: _v, toString: _v, valueOf: _v\n  }\n)\n\nexport const batch = (fn, _first = !batched) => {\n  batched ??= new Set;\n  try { fn(); }\n  finally { if (_first) { for (const fx of batched) fx(); batched = null } }\n}\n\nexport const untracked = (fn, _prev, _v) => (_prev = current, current = null, _v = fn(), current = _prev, _v)\n", "// \"centralized\" version of :if\nimport sprae, { throttle, _on, _off, _state, frag } from '../core.js';\n\n// :if=\"a\"\nexport default (el, state, _holder, _el, _match) => {\n  // new element :if\n  // console.log(':if init', el)\n  if (!el._holder) {\n    // mark el as fake-spraed to delay init, since we sprae rest when branch matches, both :if and :else :if\n    el[_state] ??= null\n\n    _el = el.content ? frag(el) : el\n\n    el.replaceWith(_holder = document.createTextNode(''))\n    _el._holder = _holder._holder = _holder\n\n\n    _holder._clauses = [_el._clause = [_el, false]]\n\n    _holder.update = throttle(() => {\n      let match = _holder._clauses.find(([, s]) => s)\n      // console.group(':if update clauses', ..._holder._clauses)\n\n      if (match != _match) {\n        // console.log(':if match', match)\n        _match?.[0].remove()\n        _match?.[0][_off]?.()\n        if (_match = match) {\n          _holder.before(_match[0].content || _match[0])\n          // there's no :else after :if, so lazy-sprae here doesn't risk adding own destructor to own list of destructors\n          !_match[0][_state] ? (delete _match[0][_state], sprae(_match[0], state)) : _match[0][_on]?.()\n        }\n      }\n      // console.groupEnd()\n    })\n  }\n  // :else :if needs to be spraed all over to have clean list of offable effects\n  else sprae(_el = el, state)\n\n  // :else may have children to init which is called after :if\n  // or preact can schedule :else after :if, so we ensure order of call by next tick\n  return value => {\n    // console.log(':if update', _el, value)\n    _el._clause[1] = value\n    _el._holder.update()\n  }\n}\n", "import { _on, _off, _state, frag } from '../core.js';\n\n\n// NOTE: we can reach :else counterpart whereas prev :else :if is on hold\nexport default (el, state, _el, _, _prev=el) => {\n\n  // console.log(':else init', el)\n  _el = el.content ? frag(el) : el\n\n  // find holder\n  while (_prev && !(_el._holder = _prev._holder)) _prev = _prev.previousSibling\n\n  el.remove()\n  el[_state] = null // mark as fake-spraed to stop further init, to lazy-sprae when branch matches\n\n  _el._holder._clauses.push(_el._clause = [_el, true])\n\n  return _el._holder.update\n}\n", "import { frag, call } from \"../core.js\"\n\nexport default el => (\n  // <template :text=\"a\"/> or previously initialized template\n  el.content && el.replaceWith(el = frag(el).childNodes[0]),\n  v => (v = call(v, el.textContent), el.textContent = v == null ? \"\" : v)\n)\n", "import { clsx, call } from \"../core.js\";\n\nexport default (el, _cur, _new) => (\n  _cur = new Set,\n  (v) => {\n    _new = new Set\n    if (v) clsx(call(v, el.className)).split(' ').map(c => c && _new.add(c))\n    for (let c of _cur) if (_new.has(c)) _new.delete(c); else el.classList.remove(c);\n    for (let c of _cur = _new) el.classList.add(c)\n  }\n)\n", "import { call, attr } from \"../core.js\";\n\nexport default (el, _static) => (\n  _static = el.getAttribute(\"style\"),\n  v => {\n    v = call(v, el.style)\n    if (typeof v === \"string\") attr(el, \"style\", _static + '; ' + v);\n    else {\n      if (_static) attr(el, \"style\", _static);\n      // NOTE: we skip names not starting with a letter - eg. el.style stores properties as { 0: --x } or JSDOM has _pfx\n      for (let k in v) k[0] == '-' ? el.style.setProperty(k, v[k]) : k[0] > 'A' && (el.style[k] = v[k])\n    }\n  }\n)\n", "import { call } from \"../core.js\"\n\nexport default () => call\n", "import sprae, { attr, parse, _state } from \"../core.js\";\n\n\n// create expression setter, reflecting value back to state\nexport const setter = (expr, _set = parse(`${expr}=__`)) => (target, value) => {\n  // save value to stash\n  target.__ = value; _set(target), delete target.__\n}\n\nexport default (el, state, expr, name) => {\n  // bind back to value, but some values can be not bindable, eg. `:value=\"7\"`\n  try {\n    const set = setter(expr)\n    const handleChange = el.type === 'checkbox' ? () => set(state, el.checked) :\n      el.type === 'select-multiple' ? () => set(state, [...el.selectedOptions].map(o => o.value)) :\n        () => set(state, el.selectedIndex < 0 ? null : isNaN(el.valueAsNumber) ? el.value : el.valueAsNumber);\n\n    el.oninput = el.onchange = handleChange; // hope user doesn't redefine these manually via `.oninput = somethingElse` - it saves 5 loc vs addEventListener\n\n    if (el.type?.startsWith('select')) {\n      // select element also must observe any added/removed options or changed values (outside of sprae)\n      new MutationObserver(handleChange).observe(el, { childList: true, subtree: true, attributes: true });\n\n      // select options must be initialized before calling an update\n      sprae(el, state)\n    }\n\n    // initial state value - setter has already cached it, so parse is fast\n    parse(expr)(state) ?? handleChange()\n  } catch { }\n\n  return (el.type === \"text\" || el.type === \"\" || el.tagName === \"TEXTAREA\") ?\n    (value, _from, _to) => (\n      // we retain selection in input\n      (_from = el.selectionStart),\n      (_to = el.selectionEnd),\n      el.setAttribute(\"value\", (el.value = value == null ? \"\" : value)),\n      _from && el.setSelectionRange(_from, _to)\n    ) :\n    (el.type === \"checkbox\") ?\n      (value) => (el.checked = value, attr(el, \"checked\", value)) :\n      (el.type === 'radio') ? (value) => (\n        el.value === value && ((el.checked = value), attr(el, 'checked', value))\n      ) :\n        (el.type === \"select-one\") ?\n          (value) => {\n            for (let o of el.options)\n              o.value == value ? o.setAttribute(\"selected\", '') : o.removeAttribute(\"selected\");\n            el.value = value;\n          } :\n          (el.type === 'select-multiple') ? (value) => {\n            for (let o of el.options) o.removeAttribute('selected')\n            for (let v of value) el.querySelector(`[value=\"${v}\"]`).setAttribute('selected', '')\n          } :\n            (value) => (el.value = value);\n}\n", "import { parse } from \"../core.js\"\n// import { setter } from \"./value.js\"\n\nexport default (el, state, expr, name, _prev, _set) => {\n  // FIXME: we call eval twice here - once to check if it's fn, second for update (from core)\n  if (typeof parse(expr)(state) == 'function') return v => (v(el))\n\n  // NOTE: we have to set element statically (outside of effect) to avoid parasitic sub - multiple els with same :ref can cause recursion (eg. :each :ref=\"x\")\n  // (setter(expr)(state, el))\n  Object.defineProperty(state, expr, { value: el, configurable: true })\n}\n", "import sprae, { store, call, untracked, _state, _signals, signal } from '../core.js'\n\nexport default (el, rootState) => {\n  // 0 run pre-creates state to provide scope for the first effect - it can write vars in it, so we should already have it\n  // el[_state] even replaces own :scope effect state\n  let subscope = el[_state] = store({}, rootState), init = false;\n\n  // 1st run spraes subtree with values from scope - it can be postponed by modifiers (we isolate reads from parent effect)\n  // 2nd+ runs update subscope\n  return values => {\n    values = call(values, subscope);\n\n    // we bind to subscope to alleviate friction using scope method directly\n    // also returned props should force-create signals in subscope, not overwriting parent\n    if (values !== subscope) {\n      for (let k in values) {\n        // _add forces new prop, instead of checking parent\n        let v = typeof values[k] === 'function' ? values[k].bind(subscope) : values[k]\n        // update\n        if (k in subscope[_signals]) subscope[k] = v\n        // create\n        else (subscope[_signals][k] = (k[0] == '_' || v?.peek) ? v : signal(store(v)))\n      }\n    }\n\n    // Object.assign(subscope, call(values, subscope))\n    return !init && (init = true, delete el[_state], untracked(() => sprae(el, subscope)))\n  }\n}\n", "import sprae, { store, _state, effect, _change, _signals, frag, throttle } from \"../core.js\";\n\nconst each = (tpl, state, expr) => {\n  let [itemVar, idxVar = \"$\"] = expr.split(/\\bin\\b/)[0].trim().replace(/\\(|\\)/g, '').split(/\\s*,\\s*/);\n\n  // we need :if to be able to replace holder instead of tpl for :if :each case\n  let holder = document.createTextNode(\"\");\n\n  // we re-create items any time new items are produced\n  let cur, keys, items, prevl = 0\n\n  // FIXME: pass items to update instead of global\n  let update = throttle(() => {\n    let i = 0, newItems = items, newl = newItems.length\n\n    // plain array update, not store (signal with array) - updates full list\n    if (cur && !cur[_change]) {\n      for (let s of cur[_signals] || []) s[Symbol.dispose]()\n      cur = null, prevl = 0\n    }\n\n    // delete\n    if (newl < prevl) cur.length = newl\n\n    // update, append, init\n    else {\n      // init\n      if (!cur) cur = newItems\n      // update\n      else while (i < prevl) cur[i] = newItems[i++]\n\n      // append\n      for (; i < newl; i++) {\n        cur[i] = newItems[i]\n\n        let idx = i,\n          // inherited state must be cheaper in terms of memory and faster in terms of performance, compared to creating a proxy store\n          // subscope = store({\n          //   // NOTE: since we simulate signal, we have to make sure it's actual signal, not fake one\n          //   // FIXME: try to avoid this, we also have issue with wrongly calling dispose in store on delete\n          //   [itemVar]: cur[_signals]?.[idx]?.peek ? cur[_signals]?.[idx] : cur[idx],\n          //   [idxVar]: keys ? keys[idx] : idx\n          // }, state)\n        subscope = Object.create(state, {\n          [itemVar]: { get: () => cur[idx] },\n          [idxVar]: { value: keys ? keys[idx] : idx }\n        })\n\n        let el = tpl.content ? frag(tpl) : tpl.cloneNode(true);\n\n        holder.before(el.content || el);\n        sprae(el, subscope);\n\n        // signal/holder disposal removes element\n        let _prev = ((cur[_signals] ||= [])[i] ||= {})[Symbol.dispose]\n        cur[_signals][i][Symbol.dispose] = () => {\n          _prev?.(), el[Symbol.dispose]?.(), el.remove()\n        };\n      }\n    }\n\n    prevl = newl\n  })\n\n  tpl.replaceWith(holder);\n  tpl[_state] = null // mark as fake-spraed, to preserve :-attribs for template\n\n  return value => {\n    // resolve new items\n    keys = null\n    if (typeof value === \"number\") items = Array.from({ length: value }, (_, i) => i + 1)\n    else if (value?.constructor === Object) keys = Object.keys(value), items = Object.values(value)\n    else items = value || []\n\n    // whenever list changes, we rebind internal change effect\n    return effect(() => {\n      // subscribe to items change (.length) - we do it every time (not just in update) since preact unsubscribes unused signals\n      items[_change]?.value\n\n      // make first render immediately, debounce subsequent renders\n      update()\n    })\n  }\n}\n\n// :each directive skips v, k\neach.parse = (str) => str.split(/\\bin\\b/)[1].trim()\n\nexport default each\n", "import { attr, call } from \"../core.js\";\n\nexport default (el, st, ex, name) => v => attr(el, name, call(v, el.getAttribute(name)))\n", "import { attr, dashcase } from \"../core.js\";\n\nexport default (target) => value => { for (let key in value) attr(target, dashcase(key), value[key]) }\n", "import store from \"./store.js\";\nimport { batch, computed, effect, signal, untracked } from './signal.js';\nimport sprae, { use, directive, modifier, start, throttle, debounce, _off, _state, _on, _dispose } from './core.js';\n\nimport _if from \"./directive/if.js\";\nimport _else from \"./directive/else.js\";\nimport _text from \"./directive/text.js\";\nimport _class from \"./directive/class.js\";\nimport _style from \"./directive/style.js\";\nimport _fx from \"./directive/fx.js\";\nimport _value from \"./directive/value.js\";\nimport _ref from \"./directive/ref.js\";\nimport _scope from \"./directive/scope.js\";\nimport _each from \"./directive/each.js\";\nimport _default from \"./directive/default.js\";\nimport _spread from \"./directive/spread.js\";\n\n\nObject.assign(directive, {\n  // :x=\"x\"\n  '*': _default,\n\n  // FIXME\n  // 'on*': _on,\n\n  // :=\"{a,b,c}\"\n  '': _spread,\n\n  // :class=\"[a, b, c]\"\n  class: _class,\n\n  // :text=\"...\"\n  text: _text,\n\n  // :style=\"...\"\n  style: _style,\n\n  // :fx=\"...\"\n  fx: _fx,\n\n  // :value - 2 way binding like x-model\n  value: _value,\n\n  // :ref=\"...\"\n  ref: _ref,\n\n  // :scope creates variables scope for a subtree\n  scope: _scope,\n\n  if: _if,\n  else: _else,\n\n  // :each=\"v,k in src\"\n  each: _each\n})\n\nObject.assign(modifier, {\n  debounce: (fn,\n    _how = 250,\n    _schedule = _how === \"tick\" ? queueMicrotask : _how === \"raf\" ? requestAnimationFrame : _how === \"idle\" ? requestIdleCallback : ((fn) => setTimeout(fn, _how)),\n    _count = 0\n  ) =>\n    debounce(fn, _schedule),\n\n  throttle: (fn, _how = 250, _schedule = _how === \"tick\" ? queueMicrotask : _how === \"raf\" ? requestAnimationFrame : ((fn) => setTimeout(fn, _how))) => (\n    throttle(fn, _schedule)\n  ),\n\n  once: (fn, _done, _fn) => Object.assign((e) => !_done && (_done = 1, fn(e)), { once: true }),\n\n  // event modifiers\n  // actions\n  prevent: (fn) => (e) => (e?.preventDefault(), fn(e)),\n  stop: (fn) => (e) => (e?.stopPropagation(), fn(e)),\n  immediate: (fn) => (e) => (e?.stopImmediatePropagation(), fn(e)),\n\n  // options\n  passive: fn => (fn.passive = true, fn),\n  capture: fn => (fn.capture = true, fn),\n\n  // target\n  window: fn => (fn.target = fn.target.ownerDocument.defaultView, fn),\n  document: fn => (fn.target = fn.target.ownerDocument, fn),\n  root: fn => (fn.target = fn.target.ownerDocument.documentElement, fn),\n  body: fn => (fn.target = fn.target.ownerDocument.body, fn),\n  parent: fn => (fn.target = fn.target.parentNode, fn),\n\n  // testers\n  self: (fn) => (e) => (e.target === fn.target && fn(e)),\n\n  outside: (fn) => (e, _target) => (\n    _target = fn.target,\n    !_target.contains(e.target) && e.target.isConnected && (_target.offsetWidth || _target.offsetHeight)\n  ),\n})\n\n// key testers\nconst keys = {\n  ctrl: e => e.ctrlKey || e.key === \"Control\" || e.key === \"Ctrl\",\n  shift: e => e.shiftKey || e.key === \"Shift\",\n  alt: e => e.altKey || e.key === \"Alt\",\n  meta: e => e.metaKey || e.key === \"Meta\" || e.key === \"Command\",\n  arrow: e => e.key.startsWith(\"Arrow\"),\n  enter: e => e.key === \"Enter\",\n  esc: e => e.key.startsWith(\"Esc\"),\n  tab: e => e.key === \"Tab\",\n  space: e => e.key === \"\u00A0\" || e.key === \"Space\" || e.key === \" \",\n  delete: e => e.key === \"Delete\" || e.key === \"Backspace\",\n  digit: e => /^\\d$/.test(e.key),\n  letter: e => /^\\p{L}$/gu.test(e.key),\n  char: e => /^\\S$/.test(e.key),\n};\n\n// augment modifiers with key testers\nfor (let k in keys) modifier[k] = (fn, ...params) => (e) => keys[k](e) && params.every(k => keys[k]?.(e) ?? e.key === k) && fn(e)\n\nuse({\n  compile: expr => {\n    return sprae.constructor(`with (arguments[0]) { ${expr} }`)\n  },\n\n  // signals\n  signal, effect, computed, batch, untracked\n})\n\n// expose for runtime config\nsprae.use = use\nsprae.store = store\nsprae.directive = directive\nsprae.modifier = modifier\nsprae.start = start\n\nexport default sprae\nexport { sprae, store, signal, effect, computed, batch, untracked, start, use }\n", "var sprae = require(\"./sprae.js\").default; module.exports = sprae; var cur = document.currentScript;\nvar prefix = cur.getAttribute(\"prefix\") ?? cur.dataset.prefix ?? cur.dataset.spraePrefix;\nvar start = cur.getAttribute(\"start\") ?? cur.dataset.start ?? cur.dataset.spraeStart;\nif (prefix) sprae.use({ prefix });\nif (start != null && start !== 'false') (start && start !== 'true' ? document.querySelectorAll(start) : [document.body || document.documentElement]).forEach(el => sprae.start(el))"],
  "mappings": "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",
  "names": ["package_default", "init_package", "__esmMin", "_dispose", "_state", "_on", "_off", "_add", "prefix", "signal", "effect", "computed", "batch", "untracked", "directive", "modifier", "currentDir", "sprae", "initDirective", "use", "start", "compile", "parse", "applyMods", "sx", "frag", "call", "dashcase", "attr", "clsx", "throttle", "debounce", "core_default", "init_core", "__esmMin", "init_store", "init_package", "fn", "el", "state", "store_default", "fx", "offs", "off", "add", "_attrs", "i", "name", "value", "child", "package_default", "dirName", "expr", "cur", "steps", "step", "length", "prev", "str", "mods", "evaluate", "type", "e", "_poff", "dispose", "change", "count", "update", "s", "root", "values", "mutations", "m", "prepare", "_fn", "_expr", "cb", "_out", "result", "v", "params", "a", "b", "k", "tpl", "content", "attributes", "ref", "childNodes", "arg", "match", "c", "schedule", "_planned", "throttled", "_dirty", "_count", "_signals", "_change", "_set", "sandbox", "store", "list", "create", "set", "store_default", "init_store", "__esmMin", "init_core", "values", "parent", "keyCount", "signals", "state", "signal", "_", "k", "v", "_s", "descs", "computed", "isMut", "mut", "fn", "length", "i", "_v", "untracked", "batch", "current", "depth", "batched", "signal", "effect", "computed", "batch", "untracked", "init_signal", "__esmMin", "v", "_s", "_obs", "_v", "val", "sub", "fn", "_teardown", "_fx", "_deps", "__tmp", "prev", "dep", "_c", "_e", "_first", "fx", "_prev", "if_default", "init_if", "__esmMin", "init_core", "el", "state", "_holder", "_el", "_match", "_a", "core_default", "_state", "frag", "throttle", "match", "s", "_off", "_on", "value", "else_default", "init_else", "__esmMin", "init_core", "el", "state", "_el", "_", "_prev", "frag", "_state", "text_default", "init_text", "__esmMin", "init_core", "el", "frag", "v", "call", "class_default", "init_class", "__esmMin", "init_core", "el", "_cur", "_new", "v", "clsx", "call", "c", "style_default", "init_style", "__esmMin", "init_core", "el", "_static", "v", "call", "attr", "k", "fx_default", "init_fx", "__esmMin", "init_core", "call", "setter", "value_default", "init_value", "__esmMin", "init_core", "expr", "_set", "parse", "target", "value", "el", "state", "name", "set", "handleChange", "o", "core_default", "_from", "_to", "attr", "v", "ref_default", "init_ref", "__esmMin", "init_core", "el", "state", "expr", "name", "_prev", "_set", "parse", "v", "scope_default", "init_scope", "__esmMin", "init_core", "el", "rootState", "subscope", "_state", "store", "init", "values", "call", "k", "v", "_signals", "signal", "untracked", "core_default", "each", "each_default", "init_each", "__esmMin", "init_core", "tpl", "state", "expr", "itemVar", "idxVar", "holder", "cur", "keys", "items", "prevl", "update", "throttle", "_a", "_b", "i", "newItems", "newl", "_change", "s", "_signals", "idx", "subscope", "el", "frag", "core_default", "_prev", "_state", "value", "_", "effect", "str", "default_default", "init_default", "__esmMin", "init_core", "el", "st", "ex", "name", "v", "attr", "call", "spread_default", "init_spread", "__esmMin", "init_core", "target", "value", "key", "attr", "dashcase", "sprae_exports", "__export", "batch", "computed", "sprae_default", "effect", "signal", "core_default", "start", "store_default", "untracked", "use", "keys", "init_sprae", "__esmMin", "init_store", "init_signal", "init_core", "init_if", "init_else", "init_text", "init_class", "init_style", "init_fx", "init_value", "init_ref", "init_scope", "init_each", "init_default", "init_spread", "directive", "default_default", "spread_default", "class_default", "text_default", "style_default", "fx_default", "value_default", "ref_default", "scope_default", "if_default", "else_default", "each_default", "modifier", "fn", "_how", "_schedule", "_count", "debounce", "throttle", "_done", "_fn", "e", "_target", "k", "params", "expr", "sprae", "cur", "prefix", "start", "el"]
}
